user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	client_max_body_size 10m;

	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	log_format timed_combined '$remote_addr - $remote_user [$time_local] '
		'"$request" $status $body_bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'$request_time $upstream_response_time $pipe';

	access_log /var/log/nginx/access.log timed_combined;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
	
	# Upgrade dev server HTTP traffic
	server {
		listen 80;
		server_name api.epdev123.org api.epdev123.com;
		rewrite ^ https://$http_host$request_uri? permanent;
	}

	# Serve api.epdev123.org HTTPS traffic
	server {
		listen 443;
		server_name api.epdev123.org;
		
		ssl on;
		    ssl_certificate /etc/letsencrypt/live/api.epdev123.org/fullchain.pem; # managed by Certbot
		    ssl_certificate_key /etc/letsencrypt/live/api.epdev123.org/privkey.pem; # managed by Certbot

		location / {
			proxy_pass http://127.0.0.1:3001/;
		}

	}

	# Serve api.epdev123.com HTTPS traffic
	server {
		listen 443;
		server_name api.epdev123.com;
		
		ssl on;
		    ssl_certificate /etc/letsencrypt/live/api.epdev123.com/fullchain.pem; # managed by Certbot
		    ssl_certificate_key /etc/letsencrypt/live/api.epdev123.com/privkey.pem; # managed by Certbot

		location / {
			proxy_pass http://127.0.0.1:3001/;
		}

	}

	# Backend API server
	server {
		listen 80;
		server_name apitest.everipedia.org api.librewalleteos.com;

		location / {
			proxy_pass http://127.0.0.1:3001/;
		}
	}
	server {
		listen 80;
		server_name api.everipedia.org;
		rewrite ^ https://$http_host$request_uri? permanent;    # force redirect http to https
	}

	server {
		listen 443;
		server_name api.everipedia.org;
		
		ssl on;
		    ssl_certificate /etc/letsencrypt/live/api.everipedia.org/fullchain.pem; # managed by Certbot
		    ssl_certificate_key /etc/letsencrypt/live/api.everipedia.org/privkey.pem; # managed by Certbot


		location / {
			proxy_pass http://127.0.0.1:3001/;
		}
	
}


}
